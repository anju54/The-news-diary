{"ast":null,"code":"var _jsxFileName = \"/home/anju/Documents/React-practice/react-demo/src/components/DishdetailComponent.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Row, Col, Container } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n/**\n * This is implemented using functional components\n */\n\nfunction RenderDish({\n  dish\n}) {\n  console.log(dish);\n  return React.createElement(Col, {\n    xs: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: dish && dish.image,\n    alt: dish && dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, dish && dish.name), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, dish && dish.description))));\n}\n\nfunction RenderComments({\n  comments\n}) {\n  if (comments != null) {\n    let options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    return comments.map(comment => React.createElement(\"ul\", {\n      key: comment.id,\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, comment.comment), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"-- \", comment.author, \" \", new Date(comment.date).toLocaleDateString(\"en-US\", options))));\n  } else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n}\n\nconst DishdetailComponent = props => {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(BreadcrumbItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Menu\")), React.createElement(BreadcrumbItem, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.dish.name)), React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.dish.name), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(RenderDish, {\n    dish: props.dish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(RenderComments, {\n    comments: props.comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))));\n};\n\nexport default DishdetailComponent;","map":{"version":3,"sources":["/home/anju/Documents/React-practice/react-demo/src/components/DishdetailComponent.js"],"names":["React","Card","CardImg","CardText","CardBody","CardTitle","Row","Col","Container","Link","Breadcrumb","BreadcrumbItem","RenderDish","dish","console","log","image","name","description","RenderComments","comments","options","year","month","day","map","comment","id","author","Date","date","toLocaleDateString","DishdetailComponent","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Card, CardImg, CardText,  CardBody, CardTitle, Row, Col, Container } from 'reactstrap';\nimport { Link } from 'react-router-dom'; \nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n/**\n * This is implemented using functional components\n */\nfunction RenderDish({dish}){\n\n  console.log(dish);\n    \n  return (\n    <Col xs=\"5\">\n      <Card>\n        <CardImg top src={dish && dish.image} alt={ dish && dish.name} />\n        <CardBody>\n          <CardTitle>{dish &&  dish.name}</CardTitle>\n          <CardText>{dish &&  dish.description}</CardText>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n}\n\nfunction RenderComments({comments}) {\n\n  if (comments != null) {\n    let options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n    return  comments.map(comment => (\n      <ul key={comment.id} className=\"list-unstyled\">\n        <li className=\"mb-2\">{comment.comment}</li>\n        <li>\n          -- {comment.author}{\" \"}\n          {new Date(comment.date).toLocaleDateString(\"en-US\", options)}\n        </li>\n      </ul>\n    ));\n  } else return <div />;\n}\n\nconst DishdetailComponent = (props) =>{\n\n  return (\n    <Container>\n      <Row>\n        <Breadcrumb>\n            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n            <h3>{props.dish.name}</h3>\n            <hr />\n        </div>\n      </Row>\n      <Row>\n        <RenderDish dish={props.dish} />\n        <div className=\"col-12 col-md-5 m-1\">\n          <h4>Comments</h4>\n          <RenderComments comments={props.comments} />\n        </div>\n      </Row>\n    </Container>\n  );\n\n}\nexport default DishdetailComponent;"]},"metadata":{},"sourceType":"module"}