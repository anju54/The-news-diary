{"ast":null,"code":"var _jsxFileName = \"/home/anju/Documents/React-practice/react-demo/src/components/DishdetailComponent.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle } from \"reactstrap\";\n\nfunction RenderDish({\n  dish\n}) {\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    width: \"100%\",\n    src: dish.image,\n    alt: dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, dish.name), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, dish.description)));\n}\n\nfunction renderComments(comments) {\n  if (comments != null) {\n    let options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    return comments.map(comment => React.createElement(\"ul\", {\n      key: comment.id,\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, comment.comment), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"-- \", comment.author, \" \", new Date(comment.date).toLocaleDateString(\"en-US\", options))));\n  } else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n}\n\nconst DishDetail = props => {\n  if (props.dish) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(RenderDish, {\n      dish: props.dish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(RenderComments, {\n      comments: props.dish.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))));\n  }\n};\n\nexport default Dishdetail;","map":{"version":3,"sources":["/home/anju/Documents/React-practice/react-demo/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","RenderDish","dish","image","name","description","renderComments","comments","options","year","month","day","map","comment","id","author","Date","date","toLocaleDateString","DishDetail","props","Dishdetail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,SAA5C,QAA6D,YAA7D;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AACxB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAuC,IAAA,GAAG,EAAED,IAAI,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,IAAI,CAACE,IAAjB,CADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWF,IAAI,CAACG,WAAhB,CAFJ,CAFJ,CADJ;AASH;;AAED,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,MAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,QAAIC,OAAO,GAAG;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,OAA1B;AAAmCC,MAAAA,GAAG,EAAE;AAAxC,KAAd;AACA,WAAOJ,QAAQ,CAACK,GAAT,CAAaC,OAAO,IACzB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,OAAO,CAACA,OAA9B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACMA,OAAO,CAACE,MADd,EACsB,GADtB,EAEG,IAAIC,IAAJ,CAASH,OAAO,CAACI,IAAjB,EAAuBC,kBAAvB,CAA0C,OAA1C,EAAmDV,OAAnD,CAFH,CAFF,CADK,CAAP;AASD,GAXD,MAWO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACR;;AAEH,MAAMW,UAAU,GAAGC,KAAK,IAAI;AACxB,MAAIA,KAAK,CAAClB,IAAV,EAAgB;AAEhB,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEkB,KAAK,CAAClB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADE,EAIF;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEkB,KAAK,CAAClB,IAAN,CAAWK,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAJE,CADJ,CADF;AAaD;AACF,CAjBD;;AAmBE,eAAec,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle } from \"reactstrap\";\n\nfunction RenderDish({dish}) {\n    return (\n        <Card>\n            <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n            <CardBody>\n                <CardTitle>{dish.name}</CardTitle>\n                <CardText>{dish.description}</CardText>\n            </CardBody>\n        </Card>\n    );\n}\n    \nfunction renderComments(comments) {\n    if (comments != null) {\n      let options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n      return comments.map(comment => (\n        <ul key={comment.id} className=\"list-unstyled\">\n          <li className=\"mb-2\">{comment.comment}</li>\n          <li>\n            -- {comment.author}{\" \"}\n            {new Date(comment.date).toLocaleDateString(\"en-US\", options)}\n          </li>\n        </ul>\n      ));\n    } else return <div />;\n  }\n  \nconst DishDetail = props => {\n    if (props.dish) {\n\n    return (\n      <div className=\"container\">\n          <div className=\"row\">\n        <div className=\"col-12 col-md-5 m-1\">\n        <RenderDish dish={props.dish} />\n        </div>\n        <div className=\"col-12 col-md-5 m-1\">\n          <h4>Comments</h4>\n          <RenderComments comments={props.dish.comments} />\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n  \n  export default Dishdetail;"]},"metadata":{},"sourceType":"module"}